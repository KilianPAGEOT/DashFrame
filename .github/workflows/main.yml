name: Main

on:
  push:
    branches:
      - "master"
    tags:
      - "v*"
  pull_request:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup jdk 17
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Create application.properties
        shell: bash
        working-directory: src/main/resources
        run: >
          cat application.example.properties |
          sed '/^spring.security.oauth2.client.registration.google.client-id/s/NOT SET/${{secrets.OAUTH2_GOOGLE_CLIENT_ID}}/' |
          sed '/^spring.security.oauth2.client.registration.google.client-secret/s/NOT SET/${{secrets.OAUTH2_GOOGLE_CLIENT_SECRET}}/' |
          sed '/^spring.security.oauth2.client.registration.github.client-id/s/NOT SET/${{secrets.OAUTH2_GITHUB_CLIENT_ID}}/' |
          sed '/^spring.security.oauth2.client.registration.github.client-secret/s/NOT SET/${{secrets.OAUTH2_GITHUB_CLIENT_SECRET}}/' |
          sed '/^spring.mail.username/s/NOT SET/${{secrets.SPRING_MAIL_USERNAME}}/' |
          sed '/^spring.mail.password/s/NOT SET/${{secrets.SPRING_MAIL_PASSWORD}}/' |
          sed '/^dashframe.services.steam.api_key/s/NOT SET/${{secrets.STEAM_API_KEY}}/' >
          application.properties

      - name: Create Testing application.properties
        shell: bash
        working-directory: src/test/resources
        run: >
          cat application.example.properties |
          sed '/^spring.security.oauth2.client.registration.google.client-id/s/NOT SET/${{secrets.OAUTH2_GOOGLE_CLIENT_ID}}/' |
          sed '/^spring.security.oauth2.client.registration.google.client-secret/s/NOT SET/${{secrets.OAUTH2_GOOGLE_CLIENT_SECRET}}/' |
          sed '/^spring.security.oauth2.client.registration.github.client-id/s/NOT SET/${{secrets.OAUTH2_GITHUB_CLIENT_ID}}/' |
          sed '/^spring.security.oauth2.client.registration.github.client-secret/s/NOT SET/${{secrets.OAUTH2_GITHUB_CLIENT_SECRET}}/' |
          sed '/^spring.mail.username/s/NOT SET/${{secrets.SPRING_MAIL_USERNAME}}/' |
          sed '/^spring.mail.password/s/NOT SET/${{secrets.SPRING_MAIL_PASSWORD}}/' |
          sed '/^dashframe.services.steam.api_key/s/NOT SET/${{secrets.STEAM_API_KEY}}/' |
          sed '/^dashframe.services.google.api_key/s/NOT SET/${{secrets.GOOGLE_API_KEY}}/' >
          application.properties

      - name: Setup Gradle and Build
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: build --scan
          cache-read-only: false
        env:
          GRADLE_TOS_AGREE: yes

  lint:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check Formatting
        shell: bash
        run: npx prettier --check .

      - name: ESLint
        shell: bash
        working-directory: front
        run: |
          npm install
          npm run lint
