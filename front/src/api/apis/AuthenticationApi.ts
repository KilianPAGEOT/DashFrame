/* tslint:disable */
/* eslint-disable */
/**
 * DashFrame API
 * ## Authentication  This API uses tokens of an unknown type. The token is in the `Authorization` header of the request.    Example: ``` Authorization: gho_pJ9dGXVKpfzZp4PUHSxYEq9hjk0h288Gwj4S ```  ## Typical usage:  Once logged-in, the client will fetch the widgets on the board: ``` GET $API_URL/widgets ```  Then it will listen for widget update events by starting a WebSocket connection: ``` GET $API_URL/ws/events ```  In the meantime, the client will fetch the list of available widget and services: ``` GET $API_URL/services ```
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { CreateToken400Response, CreateToken401Response } from "../models";

/**
 *
 */
export class AuthenticationApi extends runtime.BaseAPI {
  /**
   * Generate a new token for the user found by authentication infos in the header
   */
  async createTokenRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<string>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (
      this.configuration &&
      (this.configuration.username !== undefined ||
        this.configuration.password !== undefined)
    ) {
      headerParameters["Authorization"] =
        "Basic " +
        btoa(this.configuration.username + ":" + this.configuration.password);
    }
    const response = await this.request(
      {
        path: `/token`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides
    );

    return new runtime.TextApiResponse(response) as any;
  }

  /**
   * Generate a new token for the user found by authentication infos in the header
   */
  async createToken(
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<string> {
    const response = await this.createTokenRaw(initOverrides);
    return await response.value();
  }
}
