openapi: 3.0.0
info:
  title: DashFrame API
  version: 0.1.0
  description: |
    ## Authentification

    This API uses tokens of an unknown type.
    The token is in the `Authorization` header of the request.  

    Example:
    ```
    Authorization: gho_pJ9dGXVKpfzZp4PUHSxYEq9hjk0h288Gwj4S
    ```
servers:
  - url: http://localhost:8080/api/{apiVersion}
    description: Development API Server
    variables:
      apiVersion:
        default: v1
components:
  schemas:
    clientInfo:
      type: object
      description: Information about the client that executed this request
      properties:
        name:
          type: string
          description: Indicates the identifier of this parameter
          example: city
        type:
          type: string
          description: Indicates the type of this parameter
          enum: ["string", "integer"]
          example: string
      required:
        - name
        - type
    id:
      type: integer
      description: A resource identifier
      minimum: 0
    error:
      type: object
      description: An error response object
      example:
        {
          "code": 42069,
          "message": "The requested Steam game 'Half-Life 3' was not found",
          "messageKey": "error.widget.steam.unknown_game",
          "messageParams": { "game": "Half-Life 3" },
        }
      properties:
        code:
          type: integer
          description: The unique error code
        message:
          type: string
          description: The error message in english, not required
        messageKey:
          type: string
          description: The error message localization key, not required
        messageParams:
          type: object
          description: The parameters used in the localization of this error message, assumed to be empty if not present
          additionalProperties:
            type: string
    serverInfo:
      type: object
      description: Information about the server that is receiving this request
      properties:
        current_time:
          type: number
          example: 1531680780
          format: int64
          description: Indicates the server time in the Epoch Unix Time Stamp format
        services:
          type: array
          description: Indicates the list of Services supported by the server
          items:
            $ref: "#/components/schemas/service"
      required:
        - current_time
        - services
    service:
      type: object
      properties:
        name:
          type: string
          description: Indicates the name of the Service
          example: weather
        widgets:
          type: array
          description: Indicates the list of Widgets supported by this Service
          items:
            $ref: "#/components/schemas/widgetDescription"
      required:
        - name
        - widgets
    widgetInstance:
      type: object
      example:
        {
          "id": 42,
          "service_id": 1,
          "order": 3,
          "column_pos": 1,
          "config":
            {
              "type": "steam/friends_list",
              "parameters": { "showOffline": 1 },
            },
        }
      properties:
        id:
          $ref: "#/components/schemas/id"
        name:
          description: User-defined name of this widget component, optional
          type: string
        serviceId:
          $ref: "#/components/schemas/id"
        order:
          type: integer
          description: The ordering of this widget in the column
          minimum: 0
        columnPos:
          type: integer
          description: The column id of the widget
          minimum: 0
        config:
          $ref: "#/components/schemas/widgetConfig"
      required:
        - id
        - service_id
        - order
        - column_pos
    widgetDescription:
      type: object
      properties:
        name:
          type: string
          description: Indicates the identifier of this Widget
          example: city_temperature
        description:
          type: string
          example: Display temperature for a city
        params:
          type: array
          description: Indicates the list of parameters to configure this Widget
          items:
            $ref: "#/components/schemas/widgetParameterDescription"
      required:
        - name
        - description
        - params
    widgetParameterDescription:
      type: object
      description: Describes a widget parameter
      properties:
        name:
          type: string
          description: Indicates the identifier of this parameter
          example: city
        type:
          type: string
          description: Indicates the type of this parameter
          enum: ["string", "integer"]
          example: string
      required:
        - name
        - type
    widgetType:
      type: string
      enum:
        - steam/friends_list
        - steam/game_news
        - steam/game_population
    widgetConfig:
      oneOf:
        - $ref: "#/components/schemas/widgetConfigEpicGamesFreeGames"
        - $ref: "#/components/schemas/widgetConfigEpicGamesFriendsList"
        - $ref: "#/components/schemas/widgetConfigRssFeed"
        - $ref: "#/components/schemas/widgetConfigSteamFriendsList"
        - $ref: "#/components/schemas/widgetConfigSteamGameNews"
        - $ref: "#/components/schemas/widgetConfigSteamGamePopulation"
        - $ref: "#/components/schemas/widgetConfigTwitchFollowedChannels"
        - $ref: "#/components/schemas/widgetConfigWeatherTime"
        - $ref: "#/components/schemas/widgetConfigYouTubeChannelStats"
        - $ref: "#/components/schemas/widgetConfigYouTubeSubscribedChannels"
        - $ref: "#/components/schemas/widgetConfigYouTubeVideoStats"
      discriminator:
        propertyName: type
        mapping:
          steam/friends_list: "#/components/schemas/widgetConfigSteamFriendsList"
          steam/game_news: "#/components/schemas/widgetConfigSteamGameNews"
          steam/game_population: "#/components/schemas/widgetConfigSteamGamePopulation"
    widgetConfigBase:
      type: object
      properties:
        name:
          description: Optional user-defined name for the widget
          type: string
    widgetConfigEpicGamesFreeGames:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the Epic Games free games widget
          properties:
            type:
              description: The unique id of this service widget
              enum: ["epic_games/free_games"]
          required:
            - type
    widgetConfigEpicGamesFriendsList:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the Epic Games friends list widget
          properties:
            type:
              description: The unique id of this service widget
              enum: ["epic_games/friends_list"]
            parameters:
              type: object
              properties:
                showOffline:
                  type: integer
                  enum: [0, 1]
              required:
                - showOffline
          required:
            - type
            - parameters
    widgetConfigRssFeed:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the RSS feed widget
          properties:
            type:
              description: The unique id of this service widget
              enum: ["rss/feed"]
            parameters:
              type: object
              properties:
                url:
                  type: string
                  format: uri
              required:
                - url
          required:
            - type
            - parameters
    widgetConfigSteamFriendsList:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the Steam friends list widget
          properties:
            type:
              description: The unique id of this service widget
              enum: ["steam/friends_list"]
            parameters:
              type: object
              properties:
                showOffline:
                  type: integer
                  enum: [0, 1]
              required:
                - showOffline
          required:
            - type
            - parameters
    widgetConfigSteamGameNews:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the Steam game news widget
          properties:
            type:
              description: The unique id of this service widget
              enum: ["steam/game_news"]
            parameters:
              type: object
              properties:
                gameNameOrId:
                  type: string
                  minLength: 1
              required:
                - gameNameOrId
          required:
            - type
            - parameters
    widgetConfigSteamGamePopulation:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the Steam game population widget
          properties:
            type:
              description: The unique id of this service widget
              enum: ["steam/game_population"]
            parameters:
              type: object
              properties:
                gameNameOrId:
                  type: string
                  minLength: 1
              required:
                - gameNameOrId
          required:
            - type
            - parameters
    widgetConfigTwitchFollowedChannels:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the Twitch list of followed channels
          properties:
            type:
              description: The unique id of this service widget
              enum: ["twitch/followed_channels"]
            parameters:
              type: object
              properties:
                filter:
                  type: string
                  enum: ["ALL", "STREAMING_ONLY"]
              required:
                - filter
          required:
            - type
            - parameters
    widgetConfigUnknown:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          properties:
            type:
              type: string
              description: The unique id of this service widget
            parameters:
              type: object
          required:
            - type
            - parameters
    widgetConfigWeatherTime:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the weather & time widget
          properties:
            type:
              description: The unique id of this service widget
              enum: ["weather_time/default"]
            parameters:
              type: object
              properties:
                location:
                  description: City name or address
                  type: string
              required:
                - location
          required:
            - type
            - parameters
    widgetConfigYouTubeChannelStats:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the YouTube channel stats widget
          properties:
            type:
              description: The unique id of this service widget
              enum: ["youtube/channel_statistics"]
            parameters:
              type: object
              properties:
                channel:
                  type: string
                  minLength: 1
              required:
                - channel
          required:
            - type
            - parameters
    widgetConfigYouTubeSubscribedChannels:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the YouTube list of subscribed channels
          properties:
            type:
              description: The unique id of this service widget
              enum: ["youtube/subsribed_channels"]
            parameters:
              type: object
              properties:
                filter:
                  type: string
                  enum: ["ALL", "STREAMING_ONLY"]
              required:
                - filter
          required:
            - type
            - parameters
    widgetConfigYouTubeVideoStats:
      allOf:
        - $ref: "#/components/schemas/widgetConfigBase"
        - type: object
          description: Configuration for the YouTube video statistics
          properties:
            type:
              description: The unique id of this service widget
              enum: ["youtube/video_statistics"]
            parameters:
              type: object
              properties:
                video:
                  type: string
              required:
                - video
          required:
            - type
            - parameters
  responses:
    notFound:
      description: Returned if the requested resource doesn't exist, or the user does not have access
      content:
        application/json:
          schema:
            type: object
            example:
              {
                "error":
                  {
                    "code": 2,
                    "message": "Not found: /widgets/42",
                    "messageKey": "error.not_found",
                    "messageParameters": { "url": "/widgets/42" },
                  },
              }
            properties:
              error:
                $ref: "#/components/schemas/error"
    notLoggedIn:
      description: The user is not logged in
      content:
        application/json:
          schema:
            type: object
            example:
              {
                "error":
                  {
                    "code": 1,
                    "message": "Not logged in",
                    "messageKey": "error.not_logged",
                  },
              }
            properties:
              error:
                $ref: "#/components/schemas/error"
  parameters:
    optionalUserId:
      name: userId
      in: query
      required: false
      description: The ID of an user, assumed to be the current user if not specified
      schema:
        $ref: "#/components/schemas/id"
    widgetConfig:
      name: config
      in: query
      description: Widget configuration
      required: true
      schema:
        $ref: "#/components/schemas/widgetConfig"
    widgetId:
      name: widgetId
      in: path
      required: true
      description: "The ID of a widget"
      schema:
        $ref: "#/components/schemas/id"
  securitySchemes:
    apiKey:
      name: Authorization
      description: Authentification via API key
      type: apiKey
      in: header

paths:
  /about.json:
    servers:
      - url: http://localhost:8080
        description: Development Server
    get:
      summary: Information about the supported services
      security: [] # public
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  client:
                    $ref: "#/components/schemas/clientInfo"
                  server:
                    $ref: "#/components/schemas/serverInfo"
                required:
                  - client
                  - server
  /widgets:
    get:
      summary: Returns the layout of the requested user's board
      security:
        - "apiKey": []
      parameters:
        - $ref: "#/components/parameters/optionalUserId"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/widgetInstance"
        "401":
          $ref: "#/components/responses/notLoggedIn"
        "404":
          $ref: "#/components/responses/notFound"
    post:
      summary: Create a new widget instance in the given user's board
      security:
        - "apiKey": []
      parameters:
        - $ref: "#/components/parameters/optionalUserId"
        - name: serviceId
          description: The ID of the linked service instance
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/id"
        - $ref: "#/components/parameters/widgetConfig"
      responses:
        "201":
          description: Widget was created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetInstance"
        "401":
          $ref: "#/components/responses/notLoggedIn"
        "404":
          $ref: "#/components/responses/notFound"
    delete:
      summary: Clear all the widgets in the user's board
      security:
        - "apiKey": []
      parameters:
        - $ref: "#/components/parameters/optionalUserId"
      responses:
        "204":
          description: Board was cleared successfully
        "401":
          $ref: "#/components/responses/notLoggedIn"
        "404":
          $ref: "#/components/responses/notFound"
  /widgets/{widgetId}:
    get:
      summary: Get information about a specific widget
      security:
        - "apiKey": []
      parameters:
        - $ref: "#/components/parameters/widgetId"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/widgetInstance"
        "401":
          $ref: "#/components/responses/notLoggedIn"
        "404":
          $ref: "#/components/responses/notFound"
    patch:
      summary: Update an existing widget's configuration
      security:
        - "apiKey": []
      parameters:
        - $ref: "#/components/parameters/widgetId"
        - $ref: "#/components/parameters/widgetConfig"
      responses:
        "204":
          description: The widget was updated successfully
        "401":
          $ref: "#/components/responses/notLoggedIn"
        "404":
          $ref: "#/components/responses/notFound"
    delete:
      summary: Delete a widget
      security:
        - "apiKey": []
      parameters:
        - $ref: "#/components/parameters/widgetId"
      responses:
        "204":
          description: The widget was deleted successfully
        "401":
          $ref: "#/components/responses/notLoggedIn"
        "404":
          $ref: "#/components/responses/notFound"
