plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'war'
    id 'org.openapi.generator' version "6.2.1"
}

group = 'com.github.dashframe'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-mail:${project.spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-web:${project.spring_version}"
    implementation "org.springframework.boot:spring-boot-starter:${project.spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server:${project.spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${project.spring_version}"
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"

    implementation 'org.hibernate:hibernate-core:5.6.12.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.6.12.Final'

    implementation "org.springframework.boot:spring-boot-starter-json:${project.spring_version}"
    implementation "org.springframework.security:spring-security-core:5.7.3"

    implementation "org.springframework.data:spring-data-jpa:${project.spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${project.spring_version}"

    developmentOnly "org.springframework.boot:spring-boot-devtools:${project.spring_version}"

    runtimeOnly "org.mariadb.jdbc:mariadb-java-client:3.0.8"

    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat:${project.spring_version}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${project.spring_version}"
    testImplementation 'com.h2database:h2:2.1.214'
    testImplementation 'org.springframework.security:spring-security-test:5.7.3'

    // WEB
    implementation "org.springframework.boot:spring-boot-starter-web:${project.spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-websocket:${project.spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-webflux:${project.spring_version}"

    implementation 'javax.validation:validation-api:2.0.1.Final'

    // Useful collections
    implementation 'com.google.guava:guava:31.1-jre'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('clean') {
    // remove the copied assets on cleanup
    file('src/main/resources/static').deleteDir()
}

// Always build the front end and copy assets before creating a WAR
tasks.war.dependsOn(':front:assemble')

task runDevServer {
    dependsOn bootRun
    description 'Starts the server in development mode'
    group "running"
}

// Gradle Build Scan Publishing
if (hasProperty('buildScan') && System.getenv('GRADLE_TOS_AGREE')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = System.getenv('GRADLE_TOS_AGREE')
    }
}

// Generates server-side implementation of the REST API
// The output of this task need to be cleaned-up manually using `npm run format`
openApiGenerate {
    generatorName = 'spring'
    inputSpec = "$rootDir/docs/openapi.yml"
    outputDir = "$rootDir"
    configOptions = [
            // junk packages
            basePackage          : "${group}.DELETE_ME",
            configPackage        : "${group}.DELETE_ME.config",
            invokerPackage       : "${group}.DELETE_ME.invoker",

            // target packages
            apiPackage           : "${group}.rest.api",
            modelPackage         : "${group}.models.json",

            //do not generate OpenAPI docs in code, we already have a spec
            useSwaggerUI         : 'false',
            annotationLibrary    : 'none',
            documentationProvider: 'none',

            // do not import the @JsonNullable from jackson, they seem to be unused anyway
            openApiNullable      : 'false',

            // do not generate stub implementations of the API.
            interfaceOnly: 'true'
    ]
}
