/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.github.dashframe.rest.api;

import com.github.dashframe.models.json.WrappedApiError;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

@Generated(
    value = "org.openapitools.codegen.languages.SpringCodegen",
    date = "2022-11-09T11:51:12.913786908+01:00[Europe/Paris]"
)
@Validated
public interface WsApi {
    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /ws/events : Subscribes to the events WebSocket of the given user, or the current user if not present
     *
     * @param userId The ID of an user, assumed to be the current user if not specified (optional)
     * @param upgrade  (optional)
     * @param secWebSocketKey  (optional)
     * @param secWebSocketProtocol  (optional)
     * @param secWebSocketVersion  (optional)
     * @return Switching protocols (to WebSocket protocol) (status code 101)
     *         or Error HTTP response.  Status codes: - 400: Returned if the requested was malformed - 401: The user is not logged in - 404: Returned if the requested resource doesn&#39;t exist, or the user does not have access   (status code 4XX)
     */
    @RequestMapping(method = RequestMethod.GET, value = "/ws/events", produces = { "application/json" })
    default ResponseEntity<Void> eventsWebsocket(
        @Min(0) @Valid @RequestParam(value = "userId", required = false) Integer userId,
        @RequestHeader(value = "Upgrade", required = false) String upgrade,
        @RequestHeader(value = "Sec-WebSocket-Key", required = false) String secWebSocketKey,
        @RequestHeader(value = "Sec-WebSocket-Protocol", required = false) String secWebSocketProtocol,
        @RequestHeader(value = "Sec-WebSocket-Version", required = false) String secWebSocketVersion
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }
}
