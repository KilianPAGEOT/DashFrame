/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.github.dashframe.rest.api;

import com.github.dashframe.models.json.CreateToken400Response;
import com.github.dashframe.models.json.CreateToken401Response;
import com.github.dashframe.models.json.CreateUser404Response;
import com.github.dashframe.models.json.CreateUserRequest;
import com.github.dashframe.models.json.UserInstance;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

@Generated(
    value = "org.openapitools.codegen.languages.SpringCodegen",
    date = "2022-11-08T16:03:51.937911500+01:00[Europe/Paris]"
)
@Validated
public interface UsersApi {
    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /users : Create a new user instance
     *
     * @param createUserRequest  (optional)
     * @return Expected response to a valid request (status code 200)
     *         or Returned if the requested was malformed (status code 400)
     *         or The user is not logged in (status code 401)
     *         or Returned if the requested resource doesn&#39;t exist, or the user does not have access (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/users",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<UserInstance> createUser(
        @Valid @RequestBody(required = false) CreateUserRequest createUserRequest
    ) {
        getRequest()
            .ifPresent(request -> {
                for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                    if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                        String exampleString =
                            "{ \"id\" : 5, \"name\" : \"patrick\", \"username\" : \"patrick@gmail.com\", \"isAdmin\" : \"false\", \"createdAt\" : \"2022-11-07 15:17:56.69100\" }";
                        ApiUtil.setExampleResponse(request, "application/json", exampleString);
                        break;
                    }
                }
            });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }
}
