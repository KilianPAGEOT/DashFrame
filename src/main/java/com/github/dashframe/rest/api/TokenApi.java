/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.github.dashframe.rest.api;

import com.github.dashframe.models.json.CreateToken400Response;
import com.github.dashframe.models.json.CreateToken401Response;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

@Generated(
    value = "org.openapitools.codegen.languages.SpringCodegen",
    date = "2022-11-08T15:27:52.118173200+01:00[Europe/Paris]"
)
@Validated
public interface TokenApi {
    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /token : Generate a new token for the user found by authentication infos in the header
     *
     * @return Expected response to a valid request (status code 200)
     *         or Returned if the requested was malformed (status code 400)
     *         or The user is not logged in (status code 401)
     */
    @RequestMapping(method = RequestMethod.POST, value = "/token", produces = { "text/plain", "application/json" })
    default ResponseEntity<String> createToken() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }
}
