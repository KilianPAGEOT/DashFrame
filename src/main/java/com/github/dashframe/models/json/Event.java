package com.github.dashframe.models.json;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.github.dashframe.models.json.WidgetDeletionEvent;
import com.github.dashframe.models.json.WidgetErrorEvent;
import com.github.dashframe.models.json.WidgetRefreshEvent;
import com.github.dashframe.models.json.WidgetRefreshEventAllOfData;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.*;
import java.util.Objects;
import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.*;

@JsonIgnoreProperties(
    value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
    allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes(
    {
        @JsonSubTypes.Type(value = WidgetDeletionEvent.class, name = "WidgetDeletionEvent"),
        @JsonSubTypes.Type(value = WidgetErrorEvent.class, name = "WidgetErrorEvent"),
        @JsonSubTypes.Type(value = WidgetRefreshEvent.class, name = "WidgetRefreshEvent"),
        @JsonSubTypes.Type(value = WidgetDeletionEvent.class, name = "widgets/deletion"),
        @JsonSubTypes.Type(value = WidgetErrorEvent.class, name = "widgets/error"),
        @JsonSubTypes.Type(value = WidgetRefreshEvent.class, name = "widgets/refresh"),
    }
)
@Generated(
    value = "org.openapitools.codegen.languages.SpringCodegen",
    date = "2022-11-08T16:03:51.937911500+01:00[Europe/Paris]"
)
public interface Event {
    public String getType();
}
